{
  "openapi": "3.1.0",
  "info": {
    "title": "API",
    "version": "0.0.1",
    "summary": "test api summary"
  },
  "paths": {
    "/groups/{id}": {
      "get": {
        "tags": ["groups"],
        "operationId": "groups.findById",
        "parameters": [
          {
            "description": "a string that will be decoded as a finite number",
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "description": "a string that will be decoded as a finite number"
            },
            "required": true
          }
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Group",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "description": "The request or response did not match the expected schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/effect~1HttpApiSchemaError"
                }
              }
            }
          },
          "418": {
            "description": "GroupError"
          }
        }
      }
    },
    "/groups": {
      "post": {
        "tags": ["groups"],
        "operationId": "groups.create",
        "parameters": [],
        "security": [],
        "responses": {
          "200": {
            "description": "Group",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "description": "The request or response did not match the expected schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/effect~1HttpApiSchemaError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["name"],
                "additionalProperties": false
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "foo": {
                    "type": "string"
                  }
                },
                "required": ["foo"],
                "additionalProperties": false
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["name"],
                "additionalProperties": false
              }
            }
          },
          "required": true
        }
      }
    },
    "/groups/handle/{id}": {
      "post": {
        "tags": ["groups"],
        "operationId": "groups.handle",
        "parameters": [
          {
            "description": "a string that will be decoded as a finite number",
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "description": "a string that will be decoded as a finite number"
            },
            "required": true
          }
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": ["id", "name"],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The request or response did not match the expected schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/effect~1HttpApiSchemaError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["name"],
                "additionalProperties": false
              }
            }
          },
          "required": true
        }
      }
    },
    "/groups/handleraw/{id}": {
      "post": {
        "tags": ["groups"],
        "operationId": "groups.handleRaw",
        "parameters": [
          {
            "description": "a string that will be decoded as a finite number",
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "description": "a string that will be decoded as a finite number"
            },
            "required": true
          }
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": ["id", "name"],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The request or response did not match the expected schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/effect~1HttpApiSchemaError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["name"],
                "additionalProperties": false
              }
            }
          },
          "required": true
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users API"],
        "operationId": "users.findById",
        "parameters": [
          {
            "description": "a string that will be decoded as a finite number",
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string",
              "description": "a string that will be decoded as a finite number"
            },
            "required": true
          }
        ],
        "security": [
          {
            "cookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Some description for User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "The request or response did not match the expected schema",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/effect~1HttpApiSchemaError"
                    },
                    {
                      "$ref": "#/components/schemas/UserError"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["Users API"],
        "operationId": "users.create",
        "parameters": [
          {
            "description": "a string that will be decoded as a finite number",
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "a string that will be decoded as a finite number"
            },
            "required": true
          }
        ],
        "security": [
          {
            "cookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Some description for User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "The request or response did not match the expected schema",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/effect~1HttpApiSchemaError"
                    },
                    {
                      "$ref": "#/components/schemas/UserError"
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "anyOf": [
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["name"],
                "additionalProperties": false
              }
            }
          },
          "required": true
        }
      },
      "get": {
        "tags": ["Users API"],
        "operationId": "listUsers",
        "parameters": [
          {
            "description": "a string that will be decoded as a finite number",
            "name": "page",
            "in": "header",
            "schema": {
              "type": "string",
              "description": "a string that will be decoded as a finite number"
            },
            "required": false
          },
          {
            "description": "search query",
            "name": "query",
            "in": "query",
            "schema": {
              "description": "search query",
              "anyOf": [
                { "type": "string" }
              ]
            },
            "required": false
          }
        ],
        "security": [
          {
            "cookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request or response did not match the expected schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/effect~1HttpApiSchemaError"
                }
              }
            }
          },
          "500": {
            "description": "NoStatusError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoStatusError"
                }
              }
            }
          }
        },
        "summary": "test summary",
        "deprecated": true
      }
    },
    "/users/upload/{0}": {
      "post": {
        "tags": ["Users API"],
        "operationId": "users.upload",
        "parameters": [
          {
            "name": "0",
            "in": "path",
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                }
              ]
            },
            "required": false
          }
        ],
        "security": [
          {
            "cookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contentType": {
                      "type": "string"
                    },
                    "length": {
                      "type": "number",
                      "allOf": [
                        {
                          "type": "integer",
                          "title": "isInt",
                          "description": "an integer"
                        }
                      ]
                    }
                  },
                  "required": ["contentType", "length"],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The request or response did not match the expected schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/effect~1HttpApiSchemaError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "$ref": "#/components/schemas/PersistedFile"
                  }
                },
                "required": ["file"],
                "additionalProperties": false
              }
            }
          },
          "required": true
        }
      }
    },
    "/users/uploadstream": {
      "post": {
        "tags": ["Users API"],
        "operationId": "users.uploadStream",
        "parameters": [],
        "security": [
          {
            "cookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contentType": {
                      "type": "string"
                    },
                    "length": {
                      "type": "number",
                      "allOf": [
                        {
                          "type": "integer",
                          "title": "isInt",
                          "description": "an integer"
                        }
                      ]
                    }
                  },
                  "required": ["contentType", "length"],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The request or response did not match the expected schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/effect~1HttpApiSchemaError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "$ref": "#/components/schemas/PersistedFile"
                  }
                },
                "required": ["file"],
                "additionalProperties": false
              }
            }
          },
          "required": true
        }
      }
    },
    "/healthz": {
      "get": {
        "tags": ["root"],
        "operationId": "healthz",
        "parameters": [],
        "security": [],
        "responses": {
          "204": {
            "description": "Empty"
          },
          "400": {
            "description": "The request or response did not match the expected schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/effect~1HttpApiSchemaError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ComponentsSchema": {
         "additionalProperties": false,
         "properties": {
           "contentType": {
             "type": "string"
           },
           "length": {
             "type": "number",
             "allOf": [
               {
                 "type": "integer",
                 "title": "isInt",
                 "description": "an integer"
               }
            ]
           }
         },
         "required": [
           "contentType",
           "length"
         ],
         "type": "object"
      },
      "Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "allOf": [
              {
                "type": "integer",
                "title": "isInt",
                "description": "an integer"
              }
            ]
          },
          "name": {
            "type": "string"
          }
        },
        "required": ["id", "name"],
        "additionalProperties": false
      },
      "effect/HttpApiSchemaError": {
        "type": "object",
        "properties": {
          "_tag": {
            "type": "string",
            "enum": ["HttpApiSchemaError"]
          },
          "message": {
            "type": "string"
          }
        },
        "required": ["_tag", "message"],
        "additionalProperties": false
      },
      "PersistedFile": {
        "format": "binary",
        "type": "string"
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "allOf": [
              {
                "type": "integer",
                "title": "isInt",
                "description": "an integer"
              }
            ]
          },
          "uuid": {
            "anyOf": [
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "description": "a string that will be decoded as a DateTime.Utc"
          }
        },
        "required": ["id", "name", "createdAt"],
        "additionalProperties": false
      },
      "UserError": {
        "type": "object",
        "properties": {
          "_tag": {
            "type": "string",
            "enum": ["UserError"]
          }
        },
        "required": ["_tag"],
        "additionalProperties": false
      },
      "NoStatusError": {
        "type": "object",
        "properties": {
          "_tag": {
            "type": "string",
            "enum": ["NoStatusError"]
          }
        },
        "required": ["_tag"],
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "cookie": {
        "type": "apiKey",
        "name": "token",
        "in": "cookie"
      }
    }
  },
  "security": [],
  "tags": [
    {
      "name": "groups"
    },
    {
      "name": "Users API"
    },
    {
      "name": "root"
    },
    {
      "name": "Tag from OpenApi.Transform annotation"
    }
  ]
}
