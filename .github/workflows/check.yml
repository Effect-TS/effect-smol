name: Check
on:
  workflow_dispatch:
  pull_request:
    branches: [main]
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          node-version: latest
      - run: pnpm lint

  types:
    name: Types
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          node-version: latest
      - run: pnpm check
      - run: pnpm test-types --target '>=5.8'

  types-deno:
    name: Types on Deno
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          deno-version: canary
      - run: deno check

  bundle:
    name: Bundle
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          node-version: latest
      - name: Clone base ref
        uses: actions/checkout@v4
        with:
          path: base
          ref: ${{ github.event.pull_request.base.ref }}
      - name: Build
        run: |
          pnpm build &
          cd base && pnpm install && pnpm build &
          wait
      - name: Compare bundle size
        id: bundle
        shell: bash
        run: |
          mkdir -p tmp/bundle
          mkdir -p tmp/bundle-base

          for filename in bundle/*.ts; do
            pnpm rollup -c rollup.config.js "${filename}" | gzip | wc -c > "tmp/bundle/$(basename "${filename}")" &
            pnpm rollup -c rollup.config.js "base/${filename}" | gzip | wc -c > "tmp/bundle-base/$(basename "${filename}")" &
          done
          wait

          output="| File Name | Current Size | Previous Size | Difference |"
          output+="\n|:----------|:------------:|:-------------:|:----------:|"
          for filename in bundle/*.ts; do
            current=$(cat "tmp/bundle/$(basename "${filename}")")
            previous=$([[ -f "base/${filename}" ]] && cat "tmp/bundle-base/$(basename "${filename}")" || echo 0)
            line="$(awk -v filename=${filename} -v current="${current}" -v previous="${previous}" '
              BEGIN {
                if (previous == 0) previous = current
                diff = current - previous
                diff_pct = (diff / previous) * 100
                current_kb = sprintf("%\047.2f", current / 1000)
                previous_kb = sprintf("%\047.2f", previous / 1000)
                diff_kb = sprintf("%\047.2f", diff / 1000)
                printf "| `%s` | %s KB | %s KB | %s%s KB (%s%.2f%%) |\n",
                  filename,
                  current_kb,
                  previous_kb,
                  (diff > 0 ? "+" : ""), diff_kb,
                  (diff_pct > 0 ? "+" : ""), diff_pct
            }')"
            output+="\n${line}"
          done

          echo -e $output >> stats.txt
      - name: Upload stats artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          path: stats.txt

  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        shard: [1/2, 2/2]
        runtime: [Node, Deno]
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        if: matrix.runtime == 'Node'
        uses: ./.github/actions/setup
        with:
          node-version: latest
      - name: Test
        if: matrix.runtime == 'Node'
        run: pnpm test --shard ${{ matrix.shard }}

      - name: Install dependencies
        if: matrix.runtime == 'Deno'
        uses: ./.github/actions/setup
        with:
          deno-version: canary
      - name: Test
        if: matrix.runtime == 'Deno'
        run: deno task test --shard ${{ matrix.shard }}

  jsdoc-analysis:
    name: JSDoc Analysis
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v4
      - name: Generate JSDoc Analysis
        shell: bash
        run: |
          # Run JSDoc analysis and format output for GitHub
          node scripts/analyze-jsdoc.mjs > jsdoc-analysis.txt 2>&1 || true
          echo "<!-- JSDoc Analysis PR Report -->" > jsdoc-stats.md
          echo "" >> jsdoc-stats.md
          echo "\`\`\`" >> jsdoc-stats.md
          cat jsdoc-analysis.txt >> jsdoc-stats.md
          echo "\`\`\`" >> jsdoc-stats.md
      - name: Upload JSDoc stats artifact
        uses: actions/upload-artifact@v4
        with:
          name: jsdoc-stats
          path: jsdoc-stats.md

  docgen:
    name: Documentation Generation
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          node-version: latest
      - name: Generate Documentation
        run: pnpm docgen

  circular:
    name: Circular Dependencies
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        uses: ./.github/actions/setup
        with:
          node-version: latest
      - name: Check for circular dependencies
        run: pnpm circular
